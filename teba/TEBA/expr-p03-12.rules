# 
# Copyright (c) 2009-2020 The TEBA Project. All rights reserved.
# 
# Redistribution and use in source, with or without modification, are
# permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# Author: Atsuhi Yoshida

# 03 left: *, /, %
# 04 left: +, -
# 05 left: <<, >>
# 06 left: <, <=, >, >=
# 07 left: ==, !=
# 08 left: &
# 09 left: ^
# 10 left: |
# 11 left: &&
# 12 left: ||

@OP03 => "OP\s+<[\*\/%]>\n"

# op {expr} => < op (expr) >
{ $op:OP03 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP03 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP03 }

# {expr} < op (expr) > => { (expr) op (expr) }
{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP03 $op:OP03 $sp2:SP $any2:ANYEXPR $#2:_E_OP03 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }

@OP04 => "OP\s+<[-\+]>\n"

{ $op:OP04 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP04 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP04 }

{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP04 $op:OP04 $sp2:SP $any2:ANYEXPR $#2:_E_OP04 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }

@OP05 => "OP\s+<(?:<<|>>)>\n"

{ $op:OP05 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP05 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP05 }
@:NO_MATCH:END_SHIFT:
{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP05 $op:OP05 $sp2:SP $any2:ANYEXPR $#2:_E_OP05 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }
@:LABEL:END_SHIFT:

@OP06 => "OP\s+<(?:[<>]=?)>\n"

{ $op:OP06 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP06 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP06 }

{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP06 $op:OP06 $sp2:SP $any2:ANYEXPR $#2:_E_OP06 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }

@OP07 => "OP\s+<(?:[!=]=)>\n"

{ $op:OP07 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP07 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP07 }

{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP07 $op:OP07 $sp2:SP $any2:ANYEXPR $#2:_E_OP07 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }

@OP08 => "OP\s+<&>\n"

{ $op:OP08 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP08 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP08 }
@:NO_MATCH:END_AND:
{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP08 $op:OP08 $sp2:SP $any2:ANYEXPR $#2:_E_OP08 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }
@:LABEL:END_AND:

@OP09 => "OP\s+<\^>\n"

{ $op:OP09 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP09 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP09 }
@:NO_MATCH:END_XOR:
{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP09 $op:OP09 $sp2:SP $any2:ANYEXPR $#2:_E_OP09 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }
@:LABEL:END_XOR:

@OP10 => "OP\s+<\|>\n"

{ $op:OP10 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP10 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP10 }
@:NO_MATCH:END_OR:
{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP10 $op:OP10 $sp2:SP $any2:ANYEXPR $#2:_E_OP10 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }
@:LABEL:END_OR:

@OP11 => "OP\s+<&&>\n"

{ $op:OP11 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP11 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP11 }

{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP11 $op:OP11 $sp2:SP $any2:ANYEXPR $#2:_E_OP11 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }

@OP12 => "OP\s+<\|\|>\n"

{ $op:OP12 $sp:SP $bx#1:_B_X $any:ANYEXPR $ex#1:_E_X }
=>> { ''#1:_B_OP12 $op $sp $bx:B_P $any $ex:E_P ''#1:_E_OP12 }

{ $bx1#1:_B_X '(?>':X $any1:ANYEXPR $ex1#1:_E_X ')':X $sp1:SP
  $#2:_B_OP12 $op:OP12 $sp2:SP $any2:ANYEXPR $#2:_E_OP12 }
=>> { ''#1:_B_X $bx1:B_P $any1 $ex1:E_P $sp1 $op $sp2 $any2 ''#1:_E_X }
