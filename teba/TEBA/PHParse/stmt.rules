# 
# Copyright (c) 2009-2020 The TEBA Project. All rights reserved.
# 
# Redistribution and use in source, with or without modification, are
# permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# Author: Atsuhi Yoshida


# loop statements
{ $c:CT_BE $sp:SP $#1:B_P '(?>':X $cond:ANY $#1:E_P ')':X }
  => { ''#1:_B_C $c $sp $cond ''#1:_E_C }

{ $b#1:_B_C '(?>':X $cond1:ANY $sc:SC ')':X $cond2:ANY $e#1:_E_C }
  =>> { $b $cond1 $sc:FSC $cond2 $e }

{ $c:CT_DO }
  => { ''#1:_B_0DO $c ''#1:_E_0DO }

{ $try:CT_TRY } => { ''#1:_B_0TRY $try ''#1:_E_0TRY }

# if statements
{ $c:CT_IF $sp:SP $:B_P
  $[cond: $:P_L $#1:B_P '(?>':X $:ANY $#1:E_P ')':X $:P_R $] $:E_P }
  => { ''#1:_B_0IF $c $sp $cond ''#1:_E_0IF }

# case label
{ $[case: $:RE_LC $:SP
  $#1:B_P '(?>':X $:ANYEXPR $#1:E_P ')':X $:SP $:OP/:/ $] }
=> { ''#1:_B_LC $case ''#1:_E_LC }

# default label
{ $[case: $:RE_LD $:SP $:OP/:/ $] }
=> { ''#1:_B_LC $case ''#1:_E_LC }

# expression statement
{ $sc:SC } => { ''#1:_B_ES $sc ''#1:_E_ES }
{ $ep:E_P $sp:SP $ef:E_FILE } => { $ep ''#1:_B_ES ''#1:_E_ES $sp $ef }

{ $[est: $#1:B_P '(?>':X $:ANY $#1:E_P ')':X $:SP $] $b:_B_ES }
=>> { $b $est }

{ $x:_B_ES } => { $x:_B_S }
{ $x:_E_ES } => { $x:_E_S }

# print and echo commands
{ $cmd:CMD $sp:SP $bs#1:_B_S '(?>':X $arg:ANY $es#1:_E_S ')':X }
=> { $bs $cmd $sp $arg $es }

# for break, continue, return statements.
# for require statement;
{ $cmd:/RE_(?:JP|REQ)/ $sp:SP $bs#1:_B_S '(?>':X $arg:ANY $es#1:_E_S ')':X }
=>> { $bs $cmd $sp $arg $es }

# goto labels
{ $cmd:RE_JPG $sp:SP $bs:_B_S $:B_P $label:ID_C $:E_P }
=> { $bs $cmd $sp $label:ID_L }

# for endwhile, endforeach, ...
{ $end:CT_EN $sp:SP $bs#1:_B_S '(?>':X $arg:ANY $es#1:_E_S ')':X }
=> { $bs $end $sp $arg $es }

# for case statement, i.e "case 'hogehoge';"
{ $end:/RE_L[CD]/ $sp:SP $bs#1:_B_S '(?>':X $arg:ANY $es#1:_E_S ')':X }
=> { $bs $end $sp $arg $es }
